#! /bin/sh
# Return the absolute path name of a patched copy of a diverted script $1 and
# re-apply the patch to the new version if the diverted script has been
# upgraded. Will abort if the patch could not be applied or one of the files
# (diverted original, patch or customized script) could not be found.
#
# $1 should be $0 as passed to a script, or the path name of the shell
# snippet in case of a snippet intended to be sourced.
#
# $1 can be absolute or relative and redundant /./ and /../ components will be
# removed.
#
# Version 2021.307
# (c) 2014-2021 by Guenther Brunthaler.
#
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.
diversion_base=/usr/local/diverted
customized_subdir=customized
patches_subdir=patches

set -e
cleanup() {
	rc=$?
	test "$T" && rm -- "$T"
	test $rc = 0 || echo "\"$0\" failed!" >& 2
}
T=
trap cleanup 0
trap 'exit $?' INT TERM HUP QUIT

me=$1
test $# = 1
test -n "$me"
case $me in
	/*) ;;
	*) me=`pwd`/$me
esac
me=`printf %s "$me/" | sed '
	s,/./,/,g
	s:/\([^/.][^/]*\|[.][^/.]\|[.][^/]\{2,\}\)/\+../:/:g
	s,/\+,/,g
	s,\(.\)/$,\1,
'`
test -f "$me"
token=`printf %s "${me##/}" | tr / _`
diverted=$diversion_base/$token
diverted=`readlink -f -- "$diverted"`
customized=$diversion_base/$customized_subdir/$token
customized=`readlink -f -- "$customized"`
test -f "$diverted"
test -f "$customized"
test x"$diverted" != x"$customized"
dt=`stat -c %Y -- "$diverted"`
ct=`stat -c %Y -- "$customized"`
if test $dt -gt $ct
then
	patch=$diversion_base/$patches_subdir/$token.patch
	while :
	do
		for m in :cat .gz:zcat .xz:xzcat .bz2:bzcat
		do
			x=${m%%:*}; m=${m#*:}
			pf=$patch$x
			test -f "$pf" || continue
			patch=`readlink -f -- "$pf"`
			break 2
		done
		echo "$me: '$customized' is outdated (needs to be younger" \
			"than '$diverted') and no patch '$patch*'" \
			"is present!" >& 2
		false || exit
	done
	test -f "$patch"
	pt=`stat -c %Y -- "$patch"`
	if test $ct -lt $pt
	then
		echo "$me: Customized '$customized' is older than its" \
			"patch '$patch'!" >& 2
		false || exit
	fi
	T=`mktemp -- "${TMPDIR:-/tmp}/${0##*/}.XXXXXXXXXX"`
	cat "$diverted" > "$T"
	if $m "$patch" | patch --no-backup-if-mismatch --silent "$T"
	then
		cat "$T" > "$customized"
	else
		echo "$me: Could not apply patch '$patch' to a copy of " \
			"'$diverted' in order to regenerate '$customized'!"
		false || exit
	fi
	rm -- "$T"; T=
fi
exec printf "%s\n" "$customized"
